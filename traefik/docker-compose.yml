---
version: "2.4"

services:
  traefik:
    image: traefik:v3.5.3@sha256:84eb6c0e67c99fa026bf1bf4b0afd9ad44350d375b4ebc5049c5f70543a729d6
    container_name: traefik
    labels:
      - traefik.enable=true
      - traefik.http.services.traefik.loadbalancer.server.port=8080
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - '--providers.docker.defaultRule=Host(`{{ index .Labels "com.docker.compose.service" }}.$domain`)'
      - "--providers.file.directory=/config"
      - "--certificatesresolvers.cf.acme.dnschallenge=true"
      - "--certificatesresolvers.cf.acme.dnschallenge.provider=cloudflare"
      - "--certificatesresolvers.cf.acme.email=$email"
      - "--certificatesresolvers.cf.acme.storage=/letsencrypt/acme.json"
      - "--experimental.plugins.sablier.modulename=github.com/sablierapp/sablier"
      - "--experimental.plugins.sablier.version=v1.10.1"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entryPoint.to=secure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
      - "--entrypoints.web.http.redirections.entrypoint.permanent=true"
      - "--entrypoints.secure.address=:443"
      - "--entrypoints.secure.http.tls=true"
      - "--entrypoints.secure.http.tls.certResolver=cf"
      - "--entrypoints.secure.http.tls.domains[0].main=$externaldomain"
      - "--entrypoints.secure.http.tls.domains[0].sans=*.$externaldomain"
      - "--entrypoints.secure.http.tls.domains[1].main=$domain"
      - "--entrypoints.secure.http.tls.domains[1].sans=*.$domain"
      - "--entrypoints.secure.http.middlewares=authelia@docker"
      - "--serversTransport.insecureSkipVerify=true"
      - "--accesslog=true"
      - "--accesslog.filters.statuscodes=300-399,400-499,500-599"
    environment:
      - "CF_ZONE_API_TOKEN=$API_TOKEN"
      - "CF_DNS_API_TOKEN=$API_TOKEN"
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./config:/config
      - ./letsencrypt:/letsencrypt
    ports:
      - 80:80
      - 443:443
    depends_on:
      - authelia
    dns:
      - 1.1.1.1
      - 1.0.0.1
    networks:
      ctrnetwork:
        aliases:
          - authelia.$externaldomain # For OIDC containers, so they don't try to resolve the host IP
  authelia:
    image: authelia/authelia:4.39.10@sha256:ed52a81c71dfb3b84327a1397081423773804281519b4f6c337cb12a4c58bef9
    container_name: authelia
    hostname: authelia
    labels:
      - traefik.enable=true
      - show.external=true
      - traefik.http.routers.authelia.rule=Host(`authelia.$externaldomain`)
      - traefik.http.services.authelia.loadbalancer.server.port=9091
      - traefik.http.middlewares.authelia.forwardauth.address=http://authelia:9091/api/verify?rd=https://authelia.$externaldomain/
      - traefik.http.middlewares.authelia.forwardauth.trustForwardHeader=true
      - traefik.http.middlewares.authelia.forwardauth.authResponseHeaders=Remote-User, Remote-Groups, Remote-Name, Remote-Email
      - traefik.http.middlewares.autheliaexternal.forwardauth.address=http://authelia:9091/api/verify?rd=https://authelia.$externaldomain/
      - traefik.http.middlewares.autheliaexternal.forwardauth.trustForwardHeader=true
      - traefik.http.middlewares.autheliaexternal.forwardauth.authResponseHeaders=Remote-User, Remote-Groups, Remote-Name, Remote-Email
    environment:
      - PUID=9001
      - PGID=9001
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./authelia:/config
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    depends_on:
      - authelia_redis
    networks:
      - ctrnetwork
      - default
    healthcheck:
      test: ["CMD", "/app/healthcheck.sh"]
      interval: 1m
      timeout: 10s
      retries: 3
      start_period: 15s
  authelia_redis:
    image: redis:7.4.5-alpine@sha256:bb186d083732f669da90be8b0f975a37812b15e913465bb14d845db72a4e3e08
    container_name: authelia_redis
    restart: unless-stopped
    command: redis-server --loglevel warning --requirepass authelia --databases 1 --hz 2
    volumes: 
      - ./redis:/data
networks:
  ctrnetwork:
    external: true
    name: ctr-network
  default:
